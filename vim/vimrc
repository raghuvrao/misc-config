scriptencoding utf-8

set nobackup

set noundofile

set nomodeline
set modelines=0

set backspace=indent,eol,start

let &softtabstop=&tabstop

set ignorecase
set smartcase

set sidescroll=1

set nowrap
nnoremap <Leader>w :set invwrap<CR>

set scrolljump=-50

set nowildmenu
set wildmode=longest,list,full

set ruler

set showcmd

set foldmethod=indent
set foldlevel=100

set incsearch

nnoremap <Leader><Leader> :nohlsearch<CR>

set list
set listchars=tab:→·,trail:¬,extends:$,precedes:$,nbsp:%

set laststatus=2
set statusline=%(\ %f%)%(\ %q%)%(\ %M%R%H%W%)%(\ %y%)%(\ %l,%c%V\ %)

set autochdir

set hidden

set report=0

" ftplugins shall add to / remove from this default.
set formatoptions=1jlmnq

filetype plugin indent on

function! SelectivelyEnableAutoInsertCommentLeader()
  let l:enableFiletypes = ['c', 'cpp', 'java']
  if index(l:enableFiletypes, &filetype) >= 0
    setlocal formatoptions+=r formatoptions+=o
  else
    setlocal formatoptions-=r formatoptions-=o
  endif
endfunction

augroup comment_leader
  autocmd!
  autocmd FileType * call SelectivelyEnableAutoInsertCommentLeader()
augroup END

augroup no_hard_wrap
  autocmd!
  autocmd FileType * setlocal formatoptions-=t formatoptions-=c
augroup END

augroup no_conceal
  autocmd!
  autocmd FileType * setlocal conceallevel=0 concealcursor=
augroup END

runtime ftplugin/man.vim

augroup miscellaneous
  autocmd!
  autocmd FileType help setlocal nolist keywordprg=:help
  autocmd FileType json setlocal expandtab shiftwidth=2 softtabstop=-1
  autocmd FileType man setlocal nolist
  autocmd FileType text setlocal linebreak wrap
  autocmd FileType vim setlocal keywordprg=:help shiftwidth=2 softtabstop=-1
augroup END

" When running vim in tmux, allow C-<arrow> to work as expected.  These
" mappings are useful in the cmdline and in insert mode.  tmux sends
" xterm-style key sequences when its xterm-keys option is on.
if &term =~ '^screen' && exists('$TMUX')
  " Need `execute' because we want \e to be parsed into literal Esc
  " before being assigned.
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif

nnoremap <silent> <Leader>tu i<C-R>=strftime('%s')<CR><Esc>
nnoremap <silent> <Leader>ts i<C-R>=strftime('%Y-%m-%d %H:%M:%S %Z(UTC%z)')<CR><Esc>
nnoremap <silent> <Leader>] :echo synIDattr(synID(line('.'), col('.'), 1), 'name')<CR>

if !empty(exepath('xsel'))
  nnoremap <silent> <Leader>y :%w !xsel -ib 2>/dev/null<CR>
  xnoremap <silent> <Leader>y :w !xsel -ib 2>/dev/null<CR>
  nnoremap <silent> <Leader>p :r !xsel -ob 2>/dev/null<CR>
endif

nnoremap <Leader>e :silent edit<CR>
nnoremap <Leader>m :set invmodifiable<CR>
nnoremap <Leader>I :edit $MYVIMRC<CR>
nnoremap <Leader><Space> :ls<CR>:b<Space>
nnoremap <Leader>z :bprevious<CR>
nnoremap <Leader>x :bnext<CR>
nnoremap <Leader>S :%s/\<<C-R><C-W>\>//g<Left><Left>
nnoremap <Leader>s :%s/\</g<Left><Left>
xnoremap <Leader>s :s/\</g<Left><Left>
nnoremap <Leader>g :%g/\<
xnoremap <Leader>g :g/\<
nnoremap <Leader>v :%v/\<
xnoremap <Leader>v :v/\<

" Enable syntax so operators like `gq' etc. work correctly.  Use my
" colorscheme so most things do not get syntax-highlighted.
syntax on
colorscheme raghuvrao

" Make vim more secure.  See `:h trojan-horse'.
set secure
set noexrc
