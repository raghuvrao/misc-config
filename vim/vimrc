scriptencoding utf-8

set nobackup

set noundofile

set nomodeline
set modelines=0

set backspace=indent,eol,start

let &softtabstop=&tabstop

set ignorecase
set smartcase

set nowrap
nnoremap <Leader>w :set invwrap<CR>

set scrolljump=-50

set nowildmenu
set wildmode=longest,list,full

set ruler

set showcmd

set foldmethod=indent
set foldlevel=100

set incsearch

nnoremap <Leader><Leader> :nohlsearch<CR>

set list
set listchars=tab:→·,trail:¬,extends:#,precedes:#,nbsp:%

set laststatus=2
set statusline=%(\ %f%)%(\ %q%)%(\ %M%R%H%W%)%(\ %y%)%(\ %l,%c%V\ %)

set autochdir

set hidden

set report=0

set mouse=

" ftplugins shall add to / remove from this default.
set formatoptions=1jlmnq

filetype plugin indent on

function! SelectivelyEnableAutoInsertCommentLeader()
  let l:enableFiletypes = ['c', 'cpp', 'java']
  if index(l:enableFiletypes, &filetype) >= 0
    setlocal formatoptions+=r formatoptions+=o
  else
    setlocal formatoptions-=r formatoptions-=o
  endif
endfunction

augroup comment_leader
  autocmd!
  autocmd FileType * call SelectivelyEnableAutoInsertCommentLeader()
augroup END

augroup no_hard_wrap
  autocmd!
  autocmd FileType * setlocal formatoptions-=t formatoptions-=c
augroup END

augroup no_conceal
  autocmd!
  autocmd FileType * setlocal conceallevel=0 concealcursor=
augroup END

runtime ftplugin/man.vim

augroup miscellaneous
  autocmd!
  autocmd FileType help setlocal nolist keywordprg=:help
  autocmd FileType json setlocal expandtab shiftwidth=2 softtabstop=-1
  autocmd FileType man setlocal nolist
  autocmd FileType sh setlocal expandtab shiftwidth=4 softtabstop=-1
  autocmd FileType text setlocal linebreak wrap
  autocmd FileType vim setlocal keywordprg=:help shiftwidth=2 softtabstop=-1
augroup END

" The following escape-sequences allow CTRL-<arrow> to work as expected when
" Vim is run within tmux or GNU Screen.  CTRL-<arrow> is useful in insert mode
" and cmdline mode.
"
" NOTE:
"
"   1.  For these settings to work, tmux must be configured to have its
"       `xterm-keys' option set to on, so that tmux sends xterm-style function
"       key sequences on pressing CTRL-<arrow> (see `man tmux', under
"       `xterm-keys').  GNU Screen sends xterm-style function key sequences
"       for CTRL-<arrow> in its default configuration, at least in
"       versions >= 4.00.03 (FAU), so no additional configuration should be
"       necessary in GNU Screen.
"
"   2.  Check has('gui_running') to prevent assignment of these
"       escape-sequences in GUI-Vim when it is started from within tmux or
"       screen.  These sequences are unnecessary in GUI-Vim.  When GUI-Vim is
"       started from the shell, 'term' inherits its value from the environment
"       variable TERM (which in this case matches "tmux*" or "screen*"), and
"       does not change to 'builtin_gui' until some time after all the
"       commands in this file are executed.
if !has('gui_running') && &term =~# '^screen\|^tmux'
  " :execute is needed because we want \e to be parsed into literal ESC before
  " being assigned.
  execute "set <xUp>=\e[1;*A"
  execute "set <xDown>=\e[1;*B"
  execute "set <xRight>=\e[1;*C"
  execute "set <xLeft>=\e[1;*D"
endif

nnoremap <silent> <Leader>tu i<C-R>=strftime('%s')<CR><Esc>
nnoremap <silent> <Leader>ts i<C-R>=strftime('%Y-%m-%d %H:%M:%S %Z(UTC%z)')<CR><Esc>
nnoremap <silent> <Leader>] :echo synIDattr(synID(line('.'), col('.'), 1), 'name')<CR>

if executable('xsel')
  nnoremap <silent> <Leader>y :%write !xsel -ib 2>/dev/null<CR>
  xnoremap <silent> <Leader>y :write !xsel -ib 2>/dev/null<CR>
  nnoremap <silent> <Leader>p :read !xsel -ob 2>/dev/null<CR>
endif

nnoremap <Leader>e :silent edit<CR>
nnoremap <Leader>m :set invmodifiable<CR>
nnoremap <Leader>I :edit $MYVIMRC<CR>
nnoremap <Leader><Space> :buffers<CR>:buffer<Space>
nnoremap <Leader>a :buffer #<CR>
nnoremap <Leader>z :bprevious<CR>
nnoremap <Leader>x :bnext<CR>
nnoremap <Leader>S :%substitute/\<<C-R><C-W>\>//g<Left><Left>
nnoremap <Leader>s :%substitute/\</g<Left><Left>
xnoremap <Leader>s :substitute/\</g<Left><Left>
nnoremap <Leader>g :%global/\<
xnoremap <Leader>g :global/\<
nnoremap <Leader>v :%vglobal/\<
xnoremap <Leader>v :vglobal/\<

" Enable syntax so operators like `gq' etc. work correctly.  Use my
" colorscheme so most things do not get syntax-highlighted.
syntax on
colorscheme raghuvrao

" Make vim more secure.  See `:h trojan-horse'.
set secure
set noexrc
